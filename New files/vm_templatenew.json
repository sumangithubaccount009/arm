{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Vmname": {
      "type": "string",
      "metadata": {
        "description": "Specifies a name for generating resource names."
      }
    },

        "computerName": {
      "type": "string",
          "minLength": 3,
          "maxLength": 15,
      "metadata": {
        "description": "Specifies the computer name  of the VM."
      }
    },

    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specifies the location for all resources."
      }
    },
	"tags":{
		"type": "Object"
	},
	"enableAcceleratedNetworking": {
            "type": "bool"
        },
        "networkSecurityGroupId": {
            "type": "string"
        },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Specifies a username for the Virtual Machine."
      }
    },
   "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "description"
      }
    },
	"imageReference": {
		"type": "Object"
	},
    "Vnetname": {
      "type": "string",
      "metadata": {
        "description": "description"
      }
    },

      "Subnetname": {
      "type": "string",
      "metadata": {
        "description": "description"
      }
    },
    "networkrg": {
      "type": "string",
      "metadata": {
        "description": "description"
      }
    },
    "datadiskRequiredorNot": {
      "type": "string",
      "allowedValues": [
        "required",
        "notrequired"
      ],
      "metadata": {
        "description": "To set the managed disk is required or not"
      }
    },
    "osDiskType": {
            "type": "string"
        },
        "dataDisks": {
            "type": "array"
        },
        "dataDiskResources": {
            "type": "array"
        }
  },
  "variables": {
    

    "vmName": "[parameters('Vmname')]",
    "nsgId": "[parameters('networkSecurityGroupId')]",
    "networkInterfaceName": "[concat(parameters('Vmname'), '-nic')]",
     "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "empty": [],
       "copy": [
                        {
                            "name": "dataDisks",
                            "count": "[length(parameters('dataDisks'))]",
                            "input": {
                                "lun": "[parameters('dataDisks')[copyIndex('dataDisks')].lun]",
                                "createOption": "[parameters('dataDisks')[copyIndex('dataDisks')].createOption]",
                                "caching": "[parameters('dataDisks')[copyIndex('dataDisks')].caching]",
                                "diskSizeGB": "[parameters('dataDisks')[copyIndex('dataDisks')].diskSizeGB]",
                                "managedDisk": {
                                    "id": "[coalesce(parameters('dataDisks')[copyIndex('dataDisks')].id, if(equals(parameters('dataDisks')[copyIndex('dataDisks')].name, json('null')), json('null'), resourceId('Microsoft.Compute/disks', parameters('dataDisks')[copyIndex('dataDisks')].name)))]",
                                    "storageAccountType": "[parameters('dataDisks')[copyIndex('dataDisks')].storageAccountType]"
                                },
                                "writeAcceleratorEnabled": "[parameters('dataDisks')[copyIndex('dataDisks')].writeAcceleratorEnabled]"
                            }
                        }
                    ]
     
  
  },
  "resources": [

    

    {
            "condition": "[equals(parameters('datadiskRequiredorNot'),'required')]",
            "name": "[parameters('dataDiskResources')[copyIndex()].name]",
            "type": "Microsoft.Compute/disks",
            "apiVersion": "2020-12-01",
            "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
            "properties": "[parameters('dataDiskResources')[copyIndex()].properties]",
            "sku": {
                "name": "[parameters('dataDiskResources')[copyIndex()].sku]"
            },
            "copy": {
                "name": "managedDiskResources",
                "count": "[length(parameters('dataDiskResources'))]"
            }
        },
       
   
   
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-05-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
         "primary": true,
        "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]",
	"networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
            
              "subnet": {
                "id": "[resourceId(parameters('networkrg'),'Microsoft.Network/virtualNetworks/subnets', parameters('VNetname'), parameters('Subnetname'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-07-01",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
         "osProfile": {
          "computerName": "[parameters('computerName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
        
      },
        "storageProfile": {
          "imageReference": "[parameters('imageReference')]",
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
            
          },
           "dataDisks":  "[if(equals(parameters('datadiskRequiredorNot'),'required'), variables('dataDisks'), variables('empty'))]"
        },
        
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        },
         "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
    
          }
        }
     }
   }
  ]
}